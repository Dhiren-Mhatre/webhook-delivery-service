FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    postgresql-client \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install python-dotenv gunicorn

# Copy application code
COPY . .

# Create worker service with health check
RUN echo 'import os\nimport threading\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route("/")\n@app.route("/health")\ndef health():\n    return "OK"\n\ndef run_worker():\n    os.system("celery -A celery_app worker --loglevel=info")\n\nif __name__ == "__main__":\n    worker_thread = threading.Thread(target=run_worker)\n    worker_thread.daemon = True\n    worker_thread.start()\n' > worker_app.py

# Expose port (Render will set PORT env var)
EXPOSE 8081

# Run with Gunicorn (this is key for Render)
CMD gunicorn --bind 0.0.0.0:$PORT worker_app:app