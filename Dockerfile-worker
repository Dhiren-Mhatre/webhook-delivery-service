FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    postgresql-client \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt gunicorn

# Copy application code
COPY . .

# Create a very simple health check app
RUN echo 'import os\nimport threading\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route("/")\ndef root():\n    return "OK"\n\n@app.route("/health")\ndef health():\n    return "OK"\n\n@app.route("/disable-health-check")\ndef disable_health_check():\n    return "OK"\n\ndef run_worker():\n    import subprocess\n    subprocess.Popen(["celery", "-A", "celery_app", "worker", "--loglevel=info"])\n\n# Start the worker in the background\nrun_worker()\n' > worker_app.py

# Expose port
EXPOSE 8081

# Run with Gunicorn and bind to the PORT env var
CMD gunicorn worker_app:app --bind 0.0.0.0:$PORT --log-level debug